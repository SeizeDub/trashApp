"use strict";function asyncGeneratorStep(e,t,r,n,o,a,s){try{var u=e[a](s),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(u){return function(){var e=this,s=arguments;return new Promise(function(t,r){var n=u.apply(e,s);function o(e){asyncGeneratorStep(n,t,r,o,a,"next",e)}function a(e){asyncGeneratorStep(n,t,r,o,a,"throw",e)}o(void 0)})}}var autocomplete,metropolygon,registerFormEl=document.getElementById("register-form"),autocompleteEl=document.getElementById("input-address");function initAutocomplete(){return _initAutocomplete.apply(this,arguments)}function _initAutocomplete(){return(_initAutocomplete=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,getMetropolygon();case 2:metropolygon=e.sent,(autocomplete=new google.maps.places.Autocomplete(autocompleteEl,{bounds:getPolygonBounds(metropolygon),strictBounds:!0,componentRestrictions:{country:"fr"},fields:["address_components","formatted_address","geometry"],types:["address"]})).addListener("place_changed",function(){validatePlace()}),autocompleteEl.onchange=function(){document.getElementsByClassName("pac-container")[0].matches(":hover")||(autocompleteEl.focus(),autocompleteEl.dispatchEvent(new KeyboardEvent("keydown",{keyCode:13})))};case 6:case"end":return e.stop()}},e)}))).apply(this,arguments)}function validatePlace(){var e=autocomplete.getPlace();if(void 0===e||!e.address_components||"street_number"!==e.address_components[0].types[0])return displayError(autocompleteEl,"Veuillez renseigner une adresse de domicile valide."),!1;var t=new google.maps.LatLng(e.geometry.location.lat(),e.geometry.location.lng());return!!google.maps.geometry.poly.containsLocation(t,metropolygon)||(displayError(autocompleteEl,"Veuillez sélectionner une adresse dépendante de Bordeaux Métropole."),!1)}function registerRequest(){return _registerRequest.apply(this,arguments)}function _registerRequest(){return(_registerRequest=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,r,n,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=document.getElementById("register-submit"),removeError(t),r=new FormData(registerFormEl),n=autocomplete.getPlace(),r.append("input-lat",n.geometry.location.lat()),r.append("input-lng",n.geometry.location.lng()),e.next=8,fetch("php/tasks/register-task.php",{method:"POST",body:r});case 8:return o=e.sent,e.next=11,o.text();case 11:o=e.sent,e.t0=o,e.next="success"===e.t0?15:"missing"===e.t0?17:"email"===e.t0?19:"error"===e.t0?21:23;break;case 15:return document.location.replace("index.php"),e.abrupt("break",23);case 17:return displayError(t,"Un champ est manquant."),e.abrupt("break",23);case 19:return displayError(document.getElementById("input-email"),"Cette adresse e-mail est déjà utilisée."),e.abrupt("break",23);case 21:return displayError(t,"Une erreur est survenue."),e.abrupt("break",23);case 23:case"end":return e.stop()}},e)}))).apply(this,arguments)}function getMetropolygon(){return _getMetropolygon.apply(this,arguments)}function _getMetropolygon(){return(_getMetropolygon=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("assets/json/metropolygon.json");case 2:return t=e.sent,e.next=5,t.json();case 5:return r=e.sent,e.abrupt("return",new google.maps.Polygon({paths:r}));case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}function getPolygonBounds(e){var t=new google.maps.LatLngBounds;return e.getPath().forEach(function(e){return t.extend(e)}),t}registerFormEl.onsubmit=function(e){e.preventDefault(),validatePlace()&&registerRequest()};